worker_processes  1;

error_log /runtime/nginx/log/error.log;
pid /runtime/nginx.pid;

events {
    worker_connections  512;
}

http {
    # log
    log_format snlog '$remote_addr - $upstream_cache_status [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    access_log /runtime/nginx/log/access.log snlog;

    # cache
    proxy_cache_path /runtime/nginx/cache levels=1:2 keys_zone=seqs:10m max_size=10g inactive=1m use_temp_path=off;

    # security
    server_tokens off;

    upstream my_bottle {
        server 127.0.0.1:8080;
    }

    server {
        listen 80;

        error_page  404 500 502 504  /404.html;
        error_page  403 /403.html;
        error_page  429 503 509 /429.html;

        location = / {
            root /runtime/dist;
            try_files /lrr_db.html =404;
        }
        location = /findlrr {
            root /runtime/dist;
            try_files /find_lrr.html =404;
        }
        location = /about {
            root /runtime/dist;
            try_files /about.html =404;
        }
        location = /404.html {
            root /runtime/dist;
        }
        location = /403.html {
            root /runtime/dist;
            allow all;
        }
        location = /429.html {
            root /runtime/dist;
        }
        location ^~ /js {
            alias /runtime/dist/js;
        }
        location ^~ /images {
            alias /runtime/dist/images;
        }
        location ^~ /version {
            proxy_method GET;
            proxy_cache seqs;
            proxy_cache_valid 200 10m;
            proxy_cache_key $scheme$proxy_host$uri$is_args$args;
            proxy_pass http://my_bottle;
            proxy_set_header Host $host:$server_port;
        }
        location = /find-lrr {
            proxy_method POST;
            proxy_pass http://my_bottle;
            proxy_set_header Host $host:$server_port;
        }

    }
}
